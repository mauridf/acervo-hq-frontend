@page "/incluir-personagem"
@inject PersonagemService personagemService
@inject NavigationManager navigationManager

<h3>Incluir Personagem</h3>

@if (!string.IsNullOrEmpty(mensagem))
{
    <p>@mensagem</p>
}

<form @onsubmit="HandleSubmit">
    <div class="form-group">
        <label for="nome">Nome do Personagem:</label>
        <input type="text" class="form-control" id="nome" @bind="personagem.Nome">
    </div>
    <div class="form-group">
        <label for="observacao">Observação:</label>
        <textarea class="form-control" id="observacao" @bind="personagem.Observacao"></textarea>
    </div>
    <div class="form-group">
        <label for="tipoPersonagem">Tipo de Personagem:</label>
        <select class="form-control" id="tipoPersonagem" @bind="personagem.TipoPersonagem">
            <option value="">Selecione</option>
            @foreach (var tipo in Enum.GetValues(typeof(TipoPersonagem)))
            {
                <option value="@tipo">@tipo</option>
            }
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Salvar</button>
</form>

@code {
    PersonagemModel personagem = new PersonagemModel();
    string mensagem;

    private async Task HandleSubmit()
    {
        try
        {
            await personagemService.CreatePersonagem(personagem.Nome,personagem.Observacao,personagem.TipoPersonagem);
            mensagem = "Personagem criado com sucesso!";
            navigationManager.NavigateTo("/personagem");
        }
        catch (Exception ex)
        {
            mensagem = "Erro ao criar personagem: " + ex.Message;
        }
    }
}